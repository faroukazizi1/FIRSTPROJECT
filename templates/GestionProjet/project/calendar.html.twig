{# templates/GestionProjet/project/calendar.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Calendrier des projets{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- FullCalendar CSS -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />
    <style>
        #calendar {
            max-width: 1200px;
            margin: 40px auto;
        }
        
        /* Styles pour la vue annuelle */
        .fc-dayGridYear-view .fc-daygrid-day {
            min-height: 20px;
            max-height: 40px;
        }
        
        .fc-dayGridYear-view .fc-daygrid-day-events {
            margin-top: 0;
            min-height: 0;
        }
        
        .fc-dayGridYear-view .fc-event {
            font-size: 8px;
            line-height: 1;
            margin: 1px 0;
        }
        .fc-event {
            cursor: pointer;
        }
        .fc-event-title {
            font-weight: bold;
        }
        /* Styles pour le modal de confirmation */
        .modal-confirm {
            max-width: 400px;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="text-center mb-4">Calendrier des projets</h1>
        
        <!-- Statistiques des projets -->
        {% if totalProjects is defined %}
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">Statistiques des projets</h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col">
                                <div class="bg-secondary text-white p-3 rounded">
                                    <h5>Total</h5>
                                    <h2>{{ totalProjects }}</h2>
                                </div>
                            </div>
                            <div class="col">
                                <div class="bg-success text-white p-3 rounded">
                                    <h5>Terminés</h5>
                                    <h2>{{ completedProjects }}</h2>
                                </div>
                            </div>
                            <div class="col">
                                <div class="bg-primary text-white p-3 rounded">
                                    <h5>En cours</h5>
                                    <h2>{{ inProgressProjects }}</h2>
                                </div>
                            </div>
                            <div class="col">
                                <div class="bg-warning text-white p-3 rounded">
                                    <h5>En attente</h5>
                                    <h2>{{ onHoldProjects }}</h2>
                                </div>
                            </div>
                            <div class="col">
                                <div class="bg-secondary text-white p-3 rounded">
                                    <h5>Non commencés</h5>
                                    <h2>{{ notStartedProjects }}</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
        
        <div id="calendar"></div>
    </div>

    <!-- Modal de confirmation pour les modifications -->
    <div class="modal fade" id="confirmModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-confirm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmer la modification</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Voulez-vous vraiment modifier les dates de ce projet ?</p>
                    <div id="eventDetails">
                        <p><strong>Nouvelle date de début:</strong> <span id="newStartDate"></span></p>
                        <p><strong>Nouvelle date de fin:</strong> <span id="newEndDate"></span></p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-primary" id="confirmChange">Confirmer</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- FullCalendar JS -->
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <!-- Scripts supplémentaires pour la vue annuelle -->
    <script src="{{ asset('js/calendar-year-view.js') }}"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var eventData = null;
            
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridYear,dayGridMonth,timeGridWeek,timeGridDay'
                },
                
                // Définir les vues disponibles
                views: {
                    dayGridYear: {
                        type: 'dayGrid',
                        duration: { years: 1 },
                        buttonText: 'Année'
                    }
                },
                events: "{{ path('api_projects') }}",
                eventClick: function(info) {
                    if (!info.jsEvent.ctrlKey && !info.jsEvent.metaKey) {
                        info.jsEvent.preventDefault(); // Empêche la navigation directe
                        if (info.event.url) {
                            window.location.href = info.event.url;
                        }
                    }
                },
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                displayEventTime: false,
                dayMaxEvents: true, // Permet d'afficher "plus" quand il y a trop d'événements
                
                // Activer le drag and drop
                editable: true,
                eventDurationEditable: true, // Permet d'étirer les événements
                eventResizableFromStart: true, // Permet de redimensionner depuis le début
                
                // Gestionnaire pour le déplacement d'un événement (drag and drop)
                eventDrop: function(info) {
                    handleEventChange(info);
                },
                
                // Gestionnaire pour le redimensionnement d'un événement
                eventResize: function(info) {
                    handleEventChange(info);
                }
            });
            
            // Fonction pour gérer les modifications d'événements
            function handleEventChange(info) {
                // Stocker les données de l'événement pour la confirmation
                eventData = {
                    id: info.event.id,
                    start: info.event.start,
                    end: info.event.end || info.event.start, // Si pas de fin, utiliser le début
                    title: info.event.title
                };
                
                // Formater les dates pour l'affichage
                const formatDate = (date) => {
                    return date ? new Date(date).toLocaleDateString('fr-FR') : 'Non défini';
                };
                
                // Mettre à jour le modal avec les nouvelles dates
                document.getElementById('newStartDate').textContent = formatDate(eventData.start);
                document.getElementById('newEndDate').textContent = formatDate(eventData.end);
                
                // Afficher le modal de confirmation
                const modal = new bootstrap.Modal(document.getElementById('confirmModal'));
                modal.show();
                
                // Si l'utilisateur annule, remettre l'événement à sa position initiale
                document.querySelector('[data-bs-dismiss="modal"]').addEventListener('click', function() {
                    info.revert();
                });
            }
            
            // Gérer la confirmation de changement
            document.getElementById('confirmChange').addEventListener('click', function() {
                if (eventData) {
                    // Formatter les dates au format YYYY-MM-DD
                    const formatDateForAPI = (date) => {
                        return date.toISOString().split('T')[0];
                    };
                    
                    // Envoyer les nouvelles dates au serveur
                    fetch("{{ path('app_project_update_dates') }}", {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        body: JSON.stringify({
                            id: eventData.id,
                            dateDebut: formatDateForAPI(eventData.start),
                            dateFin: formatDateForAPI(eventData.end)
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Fermer le modal
                            bootstrap.Modal.getInstance(document.getElementById('confirmModal')).hide();
                            
                            // Option : afficher un message de succès
                            const alertDiv = document.createElement('div');
                            alertDiv.className = 'alert alert-success alert-dismissible fade show';
                            alertDiv.setAttribute('role', 'alert');
                            alertDiv.innerHTML = `
                                Projet mis à jour avec succès !
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            `;
                            document.querySelector('.container').prepend(alertDiv);
                            
                            // Masquer l'alerte après 3 secondes
                            setTimeout(() => {
                                const bsAlert = new bootstrap.Alert(alertDiv);
                                bsAlert.close();
                            }, 3000);
                        } else {
                            alert('Erreur lors de la mise à jour: ' + (data.message || 'Erreur inconnue'));
                            calendar.refetchEvents(); // Recharger les événements du calendrier
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert('Une erreur est survenue lors de la mise à jour du projet');
                        calendar.refetchEvents(); // Recharger les événements du calendrier
                    });
                }
            });
            
            calendar.render();
            
            // Initialiser la vue annuelle après le rendu
            calendar.on('viewDidMount', function() {
                if (typeof window.initYearView === 'function') {
                    window.initYearView(calendar);
                }
            });
        });
    </script>
{% endblock %}